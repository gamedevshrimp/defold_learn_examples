transition_time = 0.5


local function fade_in()
	local animated_node = gui.get_node('box')
	gui.animate(animated_node, 'color.w', 1, gui.EASING_LINEAR, transition_time)
end


local function fade_out()
	local animated_node = gui.get_node('box')
	local start_color = gui.get_color(animated_node)
	gui.set_color(animated_node, vmath.vector4(start_color.x, start_color.y, start_color.z, 1))
	gui.animate(animated_node, 'color.w', 0, gui.EASING_LINEAR, transition_time)
end


function init(self)
	gui.set_render_order(15)
end


function on_message(self, message_id, message, sender)
	if message_id == hash("start_fade") then
		print('message_recieved')
		fade_in()
	elseif message_id == hash("start_unfade") then
		fade_out()
	end
end

function on_input(self, action_id, action)
	-- Add input-handling code here. The game object this script is attached to
	-- must have acquired input focus:
	--
	--    msg.post(".", "acquire_input_focus")
	--
	-- All mapped input bindings will be received. Mouse and touch input will
	-- be received regardless of where on the screen it happened.
	-- Learn more: https://defold.com/manuals/input/
	-- Remove this function if not needed
end

function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end
